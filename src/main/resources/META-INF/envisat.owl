<?xml version="1.0"?>
<!--
   Data Hub Service (DHuS) - For Space data distribution.
   Copyright (C) 2019 GAEL Systems

   This file is part of DHuS software sources.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU Affero General Public License as
   published by the Free Software Foundation, either version 3 of the
   License, or (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
   GNU Affero General Public License for more details.

   You should have received a copy of the GNU Affero General Public License
   along with this program. If not, see <http://www.gnu.org/licenses/>.
-->
<!DOCTYPE rdf:RDF [
   <!ENTITY rdf  "http://www.w3.org/1999/02/22-rdf-syntax-ns#">
   <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema#">
   <!ENTITY owl  "http://www.w3.org/2002/07/owl#">
   <!ENTITY drb  "http://www.gael.fr/drb#">
   <!ENTITY envisat "http://www.esa.int/envisat#"> 
   <!ENTITY dhus "http://www.gael.fr/dhus#">
   <!ENTITY img  "http://www.gael.fr/drb/image#">
   <!ENTITY nc "http://www.unidata.ucar.edu/netcdf#">
   ]>

<rdf:RDF xmlns:owl  = "&owl;"
         xmlns:rdf  = "&rdf;"
         xmlns:rdfs = "&rdfs;"
         xmlns:envisat = "&envisat;"
         xmlns:drb  = "&drb;"
         xmlns:nc   = "&nc;"
         xmlns:dhus = "&dhus;"
         xmlns:img  = "&img;"
         xml:base   = "&envisat;">

   <owl:Ontology rdf:about="&envisat;"/>

   <!-- ENVISAT.RA2.GDR_2P and ENVISAT.RA2.MWS_2P  -->
   <rdf:Description rdf:about="&envisat;productRA2_level2">
      <dhus:metadataTypes rdf:parseType="Literal">
		  
         <metadataType id="satellite"
                       name="Satellite"
                       contentType="text/plain"
                       category="summary">
         </metadataType>
         
         <metadataType id="instrument"
                       name="Instrument"
                       contentType="text/plain"
                       category="summary">
         </metadataType>
         
         <metadataType id="date"
                       name="Date"
                       contentType="text/date+iso8601"
                       category="summary">
         </metadataType>
         
         <!-- acquisition -->

         <metadataType id="beginPosition"
                       name="Sensing start"
                       contentType="text/date+iso8601"
                       category="product">
            <solrField name="beginposition"
                       type="tdate"/>
         </metadataType>

         <metadataType id="endPosition"
                       name="Sensing stop"
                       contentType="text/date+iso8601"
                       category="product">
            <solrField name="endposition"
                       type="tdate"/>
         </metadataType>
         

         <!-- platform -->

         <metadataType id="platformName"
                       name="Platform name"
                       contentType="text/plain"
                       category="platform">
            <solrField name="platformname"
                       type="text_general"/>
         </metadataType>

         <metadataType id="platformShortName"
                       name="Platform short name"
                       contentType="text/plain"
                       category="platform">
            <solrField name="platformshortname"
                       type="text_general"/>
         </metadataType>

         <metadataType id="platformSerialIdentifier"
                       name="Platform serial identifier"
                       contentType="text/plain"
                       category="platform">
            <solrField name="platformserialidentifier"
                       type="text_general"/>
         </metadataType>

         <metadataType id="platformNssdcIdentifier"
                       name="Platform NSSDC identifier"
                       contentType="text/plain"
                       category="platform">
            <solrField name="platformnssdcidentifier"
                       type="text_general"/>
         </metadataType>         

         <!-- instrument -->

         <metadataType id="instrumentName"
                       name="Instrument name"
                       contentType="text/plain"
                       category="instrument">
            <solrField name="instrumentname"
                       type="text_general"/>
         </metadataType>

         <metadataType id="instrumentShortName"
                       name="Instrument short name"
                       contentType="text/plain"
                       category="instrument">
            <solrField name="instrumentshortname"
                       type="text_general"/>
         </metadataType>

         <!-- orbit -->

         <metadataType id="orbitNumber"
                       name="Orbit number"
                       contentType="text/integer"
                       category="product">
            <solrField name="orbitnumber"
                       type="int"/>
         </metadataType>

         <metadataType id="relativeOrbitNumber"
                       name="Relative orbit number"
                       contentType="text/integer"
                       category="product">
            <solrField name="relativeorbitnumber"
                       type="int"/>
         </metadataType>

         <metadataType id="cycle"
                       name="Cycle"
                       contentType="text/integer"
                       category="product">
            <solrField name="cycle"
                       type="int"/>
         </metadataType>

         <metadataType id="phase"
                       name="Phase"
                       contentType="text/integer"
                       category="product">
            <solrField name="phase"
                       type="int"/>
         </metadataType>

         <!-- processing -->

         <metadataType id="processingLevel"
                       name="Processing level"
                       contentType="text/plain"
                       category="product">
            <solrField name="processinglevel"
                       type="text_general"/>
         </metadataType>

         <metadataType id="generationTime"
                       name="Generation time"
                       contentType="text/plain"
                       category="product">
         </metadataType>                  
         
         <!-- other -->        
         
         <metadataType id="productType"
                       name="Product type"
                       contentType="text/plain"
                       category="product">
            <solrField name="producttype"
                       type="text_general"/>
         </metadataType>

         <metadataType id="productDescription"
                       name="Product description"
                       contentType="text/plain"
                       category="product">
            <solrField name="productdescription"
                       type="text_general"/>
         </metadataType>

         <metadataType id="size"
                       name="Size"
                       contentType="text/plain"
                       category="summary">
            <solrField name="size"
                       type="string"/>
         </metadataType>

         <metadataType id="format"
                       name="Format"
                       contentType="text/plain"
                       category="product">
            <solrField name="format"
                       type="string"
                       required="true"/>
         </metadataType>
         
         <metadataType id="filename"
                       name="Filename"
                       contentType="text/plain"
                       category="summary">
            <solrField name="filename"
                       type="string"
                       required="true"/>
         </metadataType>
         
      </dhus:metadataTypes>
   </rdf:Description>
   
   <!-- ENVISAT.RA2.GDR_2P and ENVISAT.RA2.MWS_2P  -->
   <rdf:Description rdf:about="&envisat;productRA2_level2">
      <dhus:support/>
      <dhus:identifier rdf:parseType="Literal">
      <![CDATA[
         fn:tokenize(name (.), '\.')[1]
      ]]>
      </dhus:identifier>

      <dhus:metadataExtractor  rdf:parseType="Literal">
      <![CDATA[
         <!-- ============================================================== -->
         <!-- FUNCTIONS                                                      -->
         <!-- ============================================================== -->

         declare function local:computeSizes ($path, $base as item()*) as item()*
         {
            let $product := .
            return
               fn:data($product/@size)
         };

         declare function local:roundHalfDown($arg, $precision) as xs:double*
         {
            xs:integer((xs:double($arg)*math:power(10, $precision))) div
               math:power(10, $precision)
         };

         declare function local:computedateTime ($inputDate as xs:string?) as xs:string
         {
            let $input := $inputDate
            return concat(substring($inputDate, 1, 10),
						  "T",
              		      substring($inputDate, 12, 8),
                          ".",
                          substring($inputDate, 21, 6),
                          "Z")              
         };

         <!-- ============================================================== -->
         <!-- VARIABLES                                                      -->
         <!-- ============================================================== -->

         let $name := name()

         let $root := ./root
         
         let $VAR_title := fn:data($root/attributes/*[name(.) = "title"])
         
         let $VAR_missionId := fn:substring($name, 1, 3)
         
         let $VAR_dataSource := fn:substring($name, 5, 2)
         
         let $VAR_level := fn:substring($name, 8, 1)
         
         let $VAR_dataTypeId := fn:substring($name, 10, 6)
         
         let $VAR_orbitDurationSec := xs:integer(fn:substring($name, 65, 4))
         
         let $VAR_productGenerationCentre := fn:substring($name, 82, 3)
         
         let $VAR_classIdPlatform := fn:substring($name, 86, 1)
         
         let $VAR_classIdTimeliness := fn:substring($name, 88, 2)
         
         let $VAR_classIdBaseline := fn:substring($name, 91, 3)
         
         let $VAR_beginPosition := local:computedateTime(
                 fn:data($root/attributes/*[name(.) = "sensing_start"]))
                 
         let $VAR_endPosition := local:computedateTime(
                 fn:data($root/attributes/*[name(.) = "sensing_stop"]))
                 
         let $VAR_creationTime := local:computedateTime(
                 fn:data($root/attributes/*[name(.) = "creation_time"]))

         return
         (

         <!-- ============================================================== -->
         <!-- EXTRACTIONS                                                    -->
         <!-- ============================================================== -->

         <!-- Indexed metadata -->

         <!-- SATELLITE -->
         <metadata name="Satellite"
                   category="summary" type="text/plain">
         {
			  if ($VAR_missionId = "ENV")
			  then "ENVISAT"
			  else "UNKNOWN"
         }
         </metadata>,

         <!-- INSTRUMENT -->
         <metadata name="Instrument"
                   category="summary" type="text/plain">
         {
			  if ($VAR_dataSource = "RA")
			  then "RA2"
			  else "UNKNOWN"
         }
         </metadata>,
         
         <!-- DATE -->
         <metadata name="Date"
                   category="summary" type="text/date+iso8601">
         { $VAR_beginPosition }
         </metadata>,
         
         <!-- acquisition -->

         <!-- SENSING START -->
         <metadata queryable="beginposition" name="Sensing start"
                   category="product" type="text/date+iso8601">
         { $VAR_beginPosition }
         </metadata>,

         <!-- SENSING STOP -->
         <metadata queryable="endposition" name="Sensing stop"
                   category="product" type="text/date+iso8601">
         { $VAR_endPosition }
         </metadata>,

         <!-- platform -->

         <!-- PLATFORM NAME -->
         <metadata queryable="platformname" name="Platform name"
                   category="platform" type="text/plain">
         {
			  if ($VAR_missionId = "ENV")
			  then "ENVISAT"
			  else "UNKNOWN"
         }
         </metadata>,

         <!-- PLATFORM SHORT NAME -->
         <metadata queryable="platformshortname" name="Platform short name"
                   category="platform" type="text/plain">
         {
			  if ($VAR_missionId = "ENV")
			  then "ENVISAT"
			  else "UNKNOWN"
         }
         </metadata>,

         <!-- PLATFORM SERIAL IDENTIFIER -->
         <metadata queryable="platformserialidentifier" name="Platform serial identifier"
                   category="platform" type="text/plain">
            1
         </metadata>,

         <!-- PLATFORM NSSDC IDENTIFIER -->
         <metadata queryable="platformnssdcidentifier" name="Platform NSSDC identifier"
                   category="platform" type="text/plain">
            2002-009A
         </metadata>,

         <!-- instrument -->

         <!-- INSTRUMENT NAME -->
         <metadata queryable="instrumentname" name="Instrument name"
                   category="instrument" type="text/plain">
         {
			  if ($VAR_dataSource = "RA")
			  then "Radar Altimeter 2"
			  else "UNKNOWN"
         }
         </metadata>,

         <!-- INSTRUMENT SHORT NAME -->
         <metadata queryable="instrumentshortname" name="Instrument short name"
                   category="instrument" type="text/plain">
         {
			  if ($VAR_dataSource = "RA")
			  then "RA2"
			  else "UNKNOWN"
         }
         </metadata>,

         <!-- orbit -->

         <!-- ORBIT NUMBER -->
         <metadata queryable="orbitnumber" name="Orbit number"
                   category="product" type="text/integer">
         { xs:integer(fn:data($root/attributes/*[name(.) = "absolute_orbit_number"])) }
         </metadata>,

         <!-- RELATIVE ORBIT NUMBER -->
         <metadata queryable="relativeorbitnumber" name="Relative orbit number"
                   category="product" type="text/integer">
         { xs:integer(fn:data($root/attributes/*[name(.) = "orbit_number"])) }
         </metadata>,

         <!-- CYCLE -->
         <metadata queryable="cycle" name="Cycle"
                   category="product" type="text/integer">
         { xs:integer(fn:data($root/attributes/*[name(.) = "cycle_number"])) }
         </metadata>,

         <!-- PHASE -->
         <metadata queryable="phase" name="Phase"
                   category="product" type="text/integer">
         { xs:integer(fn:data($root/attributes/*[name(.) = "phase"])) }
         </metadata>,

         <!-- processing -->

         <!-- PROCESSING LEVEL -->
         <metadata queryable="processinglevel" name="Processing level"
                   category="product" type="text/plain">
         {
			  if ($VAR_level = "2")
			  then "LEVEL-2"
			  else "UNKNOWN"
         }            
         </metadata>,

         <!-- GENERATION TIME -->
         <metadata name="Generation time"
                   category="product" type="text/plain">
         { $VAR_creationTime }
         </metadata>,

         <!-- other -->

         <!-- PRODUCT TYPE -->
         <metadata queryable="producttype" name="Product type"
                   category="product" type="text/plain">
         { $VAR_dataTypeId }
         </metadata>,

         <!-- PRODUCT DESCRIPTION -->
         <metadata queryable="productdescription" name="Product description"
                   category="product" type="text/plain">
         { $VAR_title }
         </metadata>,

         <!-- SIZE -->
         <metadata queryable="size" name="Size"
                   category="summary" type="text/plain">
         {
            let $size := xs:double(fn:sum(local:computeSizes(., ())))
            let $kilo := 1024
            let $mega := xs:integer($kilo * 1024)
            let $giga := xs:integer($mega * 1024)
            let $tera := xs:integer($giga * 1024)
            let $kilo_size := local:roundHalfDown(($size div $kilo), 2)
            let $mega_size := local:roundHalfDown(($size div $mega), 2)
            let $giga_size := local:roundHalfDown(($size div $giga), 2)
            let $tera_size := local:roundHalfDown(($size div $tera), 2)
            return
               if ($size < 1024)
               then
                  concat ($size, " bytes")
               else
                  if (($size div $kilo) < 1024)
                  then
                     concat ($kilo_size, " KB")
                  else
                     if (($size div $mega) < 1024)
                        then
                           concat ($mega_size, " MB")
                     else
                        if (($size div $giga) < 1024)
                        then
                           concat ($giga_size, " GB")
                        else
                           concat ($tera_size, " TB")
         }
         </metadata>,
                  
         <!-- FORMAT -->
         <metadata queryable="format" name="Format"
                   category="product" type="text/plain">
         {
            if (matches($name, "(?i).*nc"))
            then "netCDF"
            else "UNKNOWN"
         }
         </metadata>,
         
         <!-- FILENAME -->
         <metadata queryable="filename" name="Filename"
                   category="summary" type="text/plain">
         { $name }
         </metadata>

         )
      ]]>
      </dhus:metadataExtractor>

   </rdf:Description>

</rdf:RDF>



